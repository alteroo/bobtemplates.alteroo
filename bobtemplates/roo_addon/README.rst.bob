.. This README is meant for consumption by humans and pypi. Pypi can render rst files so please do not use Sphinx features.
   If you want to learn more about writing documentation, please check out: http://docs.plone.org/about/documentation_styleguide.html
   This text does not appear on pypi or github. It is a comment.

==============================================================================
{{{ package.dottedname }}}
==============================================================================

This package was generated by https://github.com/alteroo/bobtemplates.alteroo.
It is meant to help you get started super quickly.

Here is what you need to know about it.


What's inside
==================
This package is located at http://gitlab.com/alteroo-{{{ package.namespace }}}/{{{ package.namespace }}}.site

buildout cfg files
--------------------

It contains the following buildout configuration files

Ready to use for development file is:

- develop.cfg - used for development

The other files are for various tasks and often need some changes to the settings such as ports and host related settings.

- base.cfg.bob    
- develop.cfg
- haproxy.cfg
- ports.cfg
- production.cfg
- rsync.cfg
- supervisord.cfg
- travis.cfg
- zeo.cfg

There is no buildout.cfg. This is on purpose, our recommended approach is that you symlink to the
`develop.cfg` when doing development and to the `production.cfg` when deploying to production.

setup.py and dependencies
----------------------------
The setup.py file declares a list of dependencies common to Alteroo projects. You'll see at least the following:
::

        'plone.api',
        'rapido.plone',
        'gloss.theme',
        'collective.documentviewer',
        'collective.routes',
        'collective.z3cform.norobots',
        'wildcard.media',
        'Products.GenericSetup>=1.8.2',
        'Products.PloneFormGen',
        'setuptools',
        'z3c.jbot',

These give us a richer out of the box experience.


Before you Start
================
Check that you have the following in place:

* A user with sudo privileges (NOT ROOT)
* A shared key for that user installed at gitlab (visit: https://gitlab.com/profile/keys)
* Ensure you're working on an Ubuntu machine (virtual or real)

Getting Started for Development
====================================

Step 1 - Check out the repository and change directory to checkout directory
-------------------------------------------------------------------------------
::

    git clone git@gitlab.com:alteroo-{{{ package.namespace }}}/{{{ package.dottedname }}}.git 
    cd {{{ package.dottedname }}}

Step 2 - Prime the machine and install
--------------------------------------------
The following command should be run from within the buildout directory::

    bash prime.sh

Then run the installer::

    bash install.sh

Step 3 - Then switch to development mode
-------------------------------------------------------------------------------
Do this with a symlink of buildout.cfg to the develop.cfg::

    ln -sf develop.cfg buildout.cfg
    bin/buildout

Production Setup
===================
To switch to production mode, symlink buildout.cfg to the production.cfg
::

    ln -sf production.cfg buildout.cfg
    bin/buildout

.. note:: The production server relies on the zeo.cfg, supervisord.cfg and haproxy.cfg
         You may need to change the default ports declared in supervisord.cfg.


Synchronizing Data
=====================

1. Edit rsync.cfg to point at the correct server
2. Make sure that you have shared keys in place
 
To synchronize data from the production server use the following command::

    bin/buildout -c rsync.cfg


Oneliner to sync and set admin password to admin::

    bin/buildout -c rsync.cfg && sh scripts/adminForDev.sh
 && bin/instance fg


